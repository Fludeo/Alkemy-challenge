import AbstractResolver from "./AbstractResolver";
import { IDIContainer, WrapWithResolver } from "../types";
/**
 * FunctionResolver - allows to use custom function with specified parameters, where parameters are references to
 * existing dependencies
 */
export default class FunctionResolver<T extends (...args: any) => any> extends AbstractResolver<ReturnType<T>> {
    private readonly func;
    private readonly parameters;
    constructor(func: T, ...parameters: T extends (...args: infer ArgTypes) => any ? WrapWithResolver<ArgTypes> : never);
    resolve: (container: IDIContainer, parentDeps?: string[] | undefined) => ReturnType<T>;
}
